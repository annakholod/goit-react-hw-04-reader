{"version":3,"sources":["components/Reader/Publication/Publication.module.css","components/Reader/Reader.module.css","components/Reader/Counter/Counter.module.css","components/Reader/Controls/Controls.jsx","components/Reader/Counter/Counter.jsx","components/Reader/Publication/Publication.jsx","components/Reader/Reader.jsx","pages/ReaderPage/ReaderPage.jsx","components/App/App.jsx","index.js","components/Reader/Controls/Controls.module.css"],"names":["module","exports","Controls","changeCount","count","items","className","style","controls","type","name","button","disabled","onClick","length","Counter","counter","Publication","item","publication","data-id","id","title","text","Reader","reader","ReaderPage","state","updateCount","nextCount","setState","evt","target","props","history","location","parseQueryStr","queryString","parse","search","push","pathname","Number","this","prevProps","prevCount","Component","App","component","path","to","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2282f44a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"publication\":\"Publication_publication__K3lMa\",\"title\":\"Publication_title__FzEZv\",\"text\":\"Publication_text__pZ1WU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reader\":\"Reader_reader__nuPd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__oSVms\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css';\n\nconst Controls = ({ changeCount, count, items }) => (\n  <section className={style.controls}>\n    <button\n      type=\"button\"\n      name=\"decrement\"\n      className={style.button}\n      disabled={count === 0}\n      onClick={changeCount}\n    >\n      Назад\n    </button>\n    <button\n      type=\"button\"\n      name=\"increment\"\n      className={style.button}\n      disabled={count === items.length - 1}\n      onClick={changeCount}\n    >\n      Вперед\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  changeCount: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Counter.module.css';\nimport Controls from '../Controls/Controls';\n\nconst Counter = ({ count, items, changeCount }) => (\n  <div>\n    <p className={style.counter}>\n      {count + 1}/{items.length}\n    </p>\n    <Controls changeCount={changeCount} count={count} items={items} />\n  </div>\n);\n\nCounter.propTypes = {\n  changeCount: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Publication.module.css';\n\nconst Publication = ({ item }) => (\n  <article className={style.publication} data-id={item.id}>\n    <h2 className={style.title}>{item.title}</h2>\n    <p className={style.text}>{item.text}</p>\n  </article>\n);\n\nPublication.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Publication;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Reader.module.css';\nimport Counter from './Counter/Counter';\nimport Publication from './Publication/Publication';\n\nconst Reader = ({ items, count, changeCount }) => (\n  <div className={style.reader}>\n    <Publication item={items[count]} />\n    <Counter items={items} count={count} changeCount={changeCount} />\n  </div>\n);\n\nReader.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  count: PropTypes.number.isRequired,\n  changeCount: PropTypes.func.isRequired,\n};\n\nexport default Reader;\n","import React, { Component } from 'react';\r\nimport queryString from 'query-string';\r\nimport PropTypes from 'prop-types';\r\nimport Reader from '../../components/Reader/Reader';\r\nimport items from '../../accepts/publications.json';\r\n\r\nclass ReaderPage extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n      search: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  state = {\r\n    count: 1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { count } = this.state;\r\n    const { history, location } = this.props;\r\n\r\n    const parseQueryStr = queryString.parse(location.search).item;\r\n    if (\r\n      !parseQueryStr ||\r\n      Number(parseQueryStr) > items.length ||\r\n      Number(parseQueryStr) === 0\r\n    ) {\r\n      return history.push({\r\n        pathname: '/reader',\r\n        search: `item=${count}`,\r\n      });\r\n    }\r\n    return this.setState({\r\n      count: parseQueryStr - 1,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location } = this.props;\r\n    const prevCount = queryString.parse(prevProps.location.search).item;\r\n    const nextCount = queryString.parse(location.search).item;\r\n\r\n    if (prevCount !== nextCount) {\r\n      this.updateCount(nextCount);\r\n    }\r\n  }\r\n\r\n  updateCount = nextCount => {\r\n    this.setState({\r\n      count: nextCount - 1,\r\n    });\r\n  };\r\n\r\n  changeCount = evt => {\r\n    const { name } = evt.target;\r\n    const { history, location } = this.props;\r\n    const parseQueryStr = queryString.parse(location.search).item;\r\n\r\n    if (name === 'increment') {\r\n      history.push({\r\n        pathname: '/reader',\r\n        search: `item=${Number(parseQueryStr) + 1}`,\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: '/reader',\r\n        search: `item=${Number(parseQueryStr) - 1}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { count } = this.state;\r\n\r\n    return (\r\n      <Reader items={items} count={count} changeCount={this.changeCount} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReaderPage;\r\n","import React from 'react';\nimport './App.module.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport ReaderPage from '../../pages/ReaderPage/ReaderPage';\n\nconst App = () => (\n  <Switch>\n    <Route component={ReaderPage} path=\"/reader\" />\n    <Redirect to=\"/reader\" />\n  </Switch>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <HashRouter basename=\"/goit-react-hw-04-reader\">\n    <Route component={App} />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2eKRa\",\"button\":\"Controls_button__20Ma_\"};"],"sourceRoot":""}